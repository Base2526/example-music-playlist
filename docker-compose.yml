version: "3"
services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ms_frontend
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - REACT_APP_HOST_GRAPHAL="localhost:1984"
    volumes:
      - ./frontend/src:/app/src
    networks:
      - ms-network
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile   
    container_name: ms_backend          
    ports:
      - "1984:4000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # set can run docker inside ex. run docker backup db(a4_mongo)
      - ./backend/src:/app/src
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://mongo1:27017/music-app
    depends_on:
      - mongo1
    networks:
      - ms-network
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb_data:/data/db
    networks:
      - ms-network
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo1:27017/music-app
      - ME_CONFIG_MONGODB_SERVER=mongo1
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      # ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      # ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
    ports:
      - "1983:8081"
    depends_on:
      - mongo1
    networks:
      - ms-network
networks:
  ms-network:
    external: true